@model GenericResponseModel<List<Room>>
@{
	var isAdmin = ViewBag.IsAdmin;
}
<!DOCTYPE html>
<html>
<head>
	<title>Rooms</title>
	<style>
		/*form cardlarinin dizayni*/
		.room-card-container {
			display: -webkit-box;
			display: -ms-flexbox;
			display: flex;
			-webkit-box-align: start;
			-ms-flex-align: start;
			align-items: flex-start;
			-ms-flex-wrap: wrap;
			flex-wrap: wrap;
			padding: 50px 0;
		}

		.room-card {
			-ms-flex-preferred-size: calc(33.33333% - 30px);
			flex-basis: calc(33.33333% - 30px);
			margin: 0 15px 30px;
			overflow: hidden;
			border-radius: 28px;
			display: block;
			padding: 30px 20px;
			background-color: #f2d9fa ;
			position: relative;
		}

			.room-card:hover,
			.room-card:hover .room-details {
			text-decoration: none;
			color: #FFF;
		}

			.room-card img, .room-card .room-details, button{
				z-index:2;
				overflow: hidden;
				position: relative;
			}

				.room-card:hover:hover .ag-card-item_bg {
				-webkit-transform: scale(10);
				-ms-transform: scale(10);
				transform: scale(10);
			}

		.ag-card-item_bg {
			height: 128px;
			width: 128px;
			background-color: #f9b234;
			z-index: 1;
			position: absolute;
			top: -75px;
			right: -75px;
			border-radius: 50%;
			-webkit-transition: all .5s ease;
			-o-transition: all .5s ease;
			transition: all .5s ease;
		}

		.room-card:nth-child(2n) .ag-card-item_bg {
			background-color: #3ecd5e;
		}

		.room-card:nth-child(3n) .ag-card-item_bg {
			background-color: #e44002;
		}

		.room-card:nth-child(4n) .ag-card-item_bg {
			background-color: #952aff;
		}

		.room-card:nth-child(5n) .ag-card-item_bg {
			background-color: #cd3e94;
		}

		.room-card:nth-child(6n) .ag-card-item_bg {
			background-color: #4c49ea;
		}
	
		/*form kardinin ic elementlerinin dizayni :image */
		.room-card img{
			border-radius: 28px;
		}
		.room-details{
            display:flex;
			flex-wrap: wrap;
		}
		.room-details p{
			font-size:18px;
			text-align: center;
			margin:10px 20px;
		}
		.room-details button{
			border-radius:10px;
			padding:5px;
			background-color: #8e44ad;
			color:white;
			border-style:none;
			font-size:15px;
			margin-right:5px;
		}
/* Max min qiymet ve select in dizayni*/
		.styled-input {
			position: relative;
			float: left;
		}

			.styled-input input {
				transition: all 0.2s ease-in-out;
			}

				.styled-input input:focus {
					border-color: #8e44ad;
					outline: none;
					box-shadow: 0 0 0 2px rgba(142, 68, 173, 0.7);
				}

			.styled-input label {
				position: absolute;
				top: 50%;
				left: 10px;
				transform: translateY(-50%);
				pointer-events: none;
				transition: all 0.2s ease-in-out;
			}

			.styled-input input:focus + label,
			.styled-input input:not(:placeholder-shown) + label {
				top: -10px;
				left: 10px;
				font-size: 12px;
				color: #8e44ad;
			}


			.styled-input-rt{
			position: relative;
			}
		.styled-input-rt select:focus {
			border-color: #8e44ad;
			outline: none;
			box-shadow: 0 0 0 2px rgba(142, 68, 173, 0.55);
		}

	</style>
</head>
<body>
	<div class="search">
		<form asp-action="FilterRooms" method="GET" asp-controller="Room" class="row g-3 align-items-center">
			<div class="col styled-input">
				<input type="number" class="form-control" id="minPrice" name="minPrice" min="0" placeholder=" ">
				<label>Min price</label>
			</div>
			<div class="col styled-input">
				<input type="number" class="form-control" id="maxPrice" name="maxPrice" min="0" placeholder=" ">
				<label>Max price</label>
			</div>
			<div class="col-6 styled-input-rt">
				<select id="roomType" class="form-select" name="roomType">
					<option value="" disabled selected hidden>Room Type</option>
					<option value="Single">Single</option>
					<option value="Double">Double</option>
					<option value="Triple">Triple</option>
					<option value="Quad">Quad</option>
					<option value="Queen">Queen</option>
					<option value="King">King</option>
				</select>
			</div>
			<div class="col-auto">
				<button type="submit" class="btn btn-info">Search</button>
			</div>


		</form>
	</div>
	<div class="room-card-container">
		@if (Model != null)
		{
			if (Model.StatusCode == 200 && Model.Data != null && Model.Data.Count > 0)
			{
				@foreach (var room in Model.Data)
				{
					<div class="room-card">
						<div class="ag-card-item_bg"></div><!--bu o yuxarida daire kimi gorunendi-->
						@if (!string.IsNullOrEmpty(room.ImageBase64))
						{
							<img src="data:image/jpeg;base64,@room.ImageBase64" alt="Room Image" />
						}
						<div class="room-details">
							<p>@room.RoomNumber</p>
							<p>@room.RoomType</p>
							<p>$@room.Price</p>
							<button value="room.Id" onclick="location.href='@Url.Action("RoomDetails","Room", new{roomId=room.Id})'">See availability</button>
							@if (isAdmin != null && isAdmin == true)
							{
								<button value="room.Id" onclick="location.href='@Url.Action("UpdateRoom", "Room", new { roomId = room.Id })'">Update Room</button>
							}
						</div>
					</div>
				}
			}
			else
			{
				<p style="color:#8e44ad; margin:20px;">@Model.Message </p>
			}
		}
		else
		{
			<p style="color:#8e44ad; margin:20px;">There may be problem with server.😕 Try again in a while.</p>
		}
	</div>
</body>
</html>
